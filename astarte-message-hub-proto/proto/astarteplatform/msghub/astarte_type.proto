/*
 * This file is part of Astarte.
 *
 * Copyright 2022 SECO Mind Srl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

syntax = "proto3";

package astarteplatform.msghub;

import "google/protobuf/timestamp.proto";

/* An array of doubles for transmission with protobuf.
 * To be used nested inside an `AstarteDataTypeIndividual`.
 */
message AstarteDoubleArray {
  repeated double values = 1;
}

/* An array of int32 for transmission with protobuf.
 * To be used nested inside an `AstarteDataTypeIndividual`.
 */
message AstarteIntegerArray {
  repeated int32 values = 1;
}

/* An array of booleans for transmission with protobuf.
 * To be used nested inside an `AstarteDataTypeIndividual`.
 */
message AstarteBooleanArray {
  repeated bool values = 1;
}

/* An array of int64 for transmission with protobuf.
 * To be used nested inside an `AstarteDataTypeIndividual`.
 */
message AstarteLongIntegerArray {
  repeated int64 values = 1;
}

/* An array of strings for transmission with protobuf.
 * To be used nested inside an `AstarteDataTypeIndividual`.
 */
message AstarteStringArray {
  repeated string values = 1;
}

/* An array of bytes for transmission with protobuf.
 * To be used nested inside an `AstarteDataTypeIndividual`.
 */
message AstarteBinaryBlobArray {
  repeated bytes values = 1;
}

/* An array of timestamps for transmission with protobuf.
 * To be used nested inside an `AstarteDataTypeIndividual`.
 */
message AstarteDateTimeArray{
  repeated google.protobuf.Timestamp values = 1;
}

/* An aggregated object data type for transmission with protobuf.
 * To be used nested inside an `AstarteDataType`.
 */
message AstarteDataTypeObject {
  map<string, AstarteDataTypeIndividual> object_data = 1;
}

/* An individual data type for transmission with protobuf.
 * To be used nested inside an `AstarteDataType`.
 */
message AstarteDataTypeIndividual {
  oneof individual_data {
    double astarte_double = 1;
    int32 astarte_integer = 2;
    bool astarte_boolean = 3;
    int64 astarte_long_integer = 4;
    string astarte_string = 5;
    bytes astarte_binary_blob = 6;
    google.protobuf.Timestamp astarte_date_time = 7;

    AstarteDoubleArray astarte_double_array = 8;
    AstarteIntegerArray astarte_integer_array = 9;
    AstarteBooleanArray astarte_boolean_array = 10;
    AstarteLongIntegerArray astarte_long_integer_array = 11;
    AstarteStringArray astarte_string_array = 12;
    AstarteBinaryBlobArray astarte_binary_blob_array = 13;
    AstarteDateTimeArray astarte_date_time_array = 14;
  }
}

/* A generic data type to be used nested in an `AstarteMessage`. */
message AstarteDataType {
  oneof data {                                        // Content for an `AstarteDataType`.
    AstarteDataTypeIndividual astarte_individual = 1; // An individual data type.
    AstarteDataTypeObject astarte_object = 2;         // An aggregated data type.
  }
}
